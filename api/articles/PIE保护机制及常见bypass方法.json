{"title":"PIE保护机制及常见bypass方法","uid":"377ee1fc1588b431f5397b715f73deb6","slug":"PIE保护机制及常见bypass方法","date":"2022-11-03T07:18:44.000Z","updated":"2022-11-03T11:02:30.810Z","comments":true,"path":"api/articles/PIE保护机制及常见bypass方法.json","keywords":"DevOps, Web, Pwn, Electronics","cover":[],"content":"<h1 id=\"PIE-保护机制及常见-bypass-方法\"><a href=\"#PIE-保护机制及常见-bypass-方法\" class=\"headerlink\" title=\"PIE 保护机制及常见 bypass 方法\"></a>PIE 保护机制及常见 bypass 方法</h1><p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t——by DuskyJuniXor</p>\n<hr>\n<h2 id=\"PIE-保护是什么\"><a href=\"#PIE-保护是什么\" class=\"headerlink\" title=\"PIE 保护是什么\"></a>PIE 保护是什么</h2><ul>\n<li>PIE全称是 position-independent executable，中文解释为地址无关可执行文件，该技术是一个针对代码段 (.text)、数据段 (.data)、未初始化全局变量段 (.bss) 等固定地址的一个防护技术，如果程序开启了 PIE 保护的话，在每次加载程序时都变换加载地址，从而不能通过 ROPgadget 等一些工具来帮助解题</li>\n</ul>\n<h2 id=\"绕过方法\"><a href=\"#绕过方法\" class=\"headerlink\" title=\"绕过方法\"></a>绕过方法</h2><h3 id=\"partial-writing\"><a href=\"#partial-writing\" class=\"headerlink\" title=\"partial writing\"></a>partial writing</h3><ul>\n<li>partial write 就是利用了 PIE 技术的缺陷。我们知道，内存是以页载入机制，如果开启 PIE 保护的话，只能影响到单个内存页，一个内存页大小为 0x1000，那么就意味着不管地址怎么变，某一条指令的后三位十六进制数的地址是始终不变的。因此我们可以通过覆盖地址的后几位来可以控制程序的流程</li>\n</ul>\n<hr>\n<h3 id=\"地址泄露\"><a href=\"#地址泄露\" class=\"headerlink\" title=\"地址泄露\"></a>地址泄露</h3><ul>\n<li>虽然程序每次运行的基址会变，但程序中的各段的相对偏移是不会变的，只要泄露出来一个地址，比如函数栈帧中的返回地址，通过 ida 静态的看他的程序地址，就能算出基址，从而实现绕过</li>\n</ul>\n<h2 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h2><p><a href=\"PIE%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%B8%B8%E8%A7%81bypass%E6%96%B9%E6%B3%95/pwn\">pwn</a></p>\n<ul>\n<li><p>检查文件保护，发现 PIE 开启</p>\n<img src=\"/post/PIE%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%B8%B8%E8%A7%81bypass%E6%96%B9%E6%B3%95/image-20221103160226169.png\" class title=\"image-20221103160226169\">\n</li>\n<li></li>\n</ul>\n","feature":true,"text":"PIE 保护机制及常见 bypass 方法​ ——by DuskyJuniXor PIE 保护是什么 PIE全称是 position-independent executable，中文解释为地址无关可执行文件，该技术是一个针对代码段 (.text)、数据段 (.data)、未初始...","link":"","photos":[],"count_time":{"symbolsCount":563,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"pwn","slug":"pwn","count":3,"path":"api/tags/pwn.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#PIE-%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6%E5%8F%8A%E5%B8%B8%E8%A7%81-bypass-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">PIE 保护机制及常见 bypass 方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PIE-%E4%BF%9D%E6%8A%A4%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">PIE 保护是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">绕过方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#partial-writing\"><span class=\"toc-text\">partial writing</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%B0%E5%9D%80%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">地址泄露</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li></ol></li></ol>","author":{"name":"DuskyJuniXor","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一边学习一边随手mark的萌新","socials":{"github":"https://github.com/DuskyJuniXor","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/330711030?spm_id_from=333.1007.0.0"}}}},"mapped":true,"prev_post":{"title":"CANARY(bypass1): 格式化字符串漏洞","uid":"6305599be3907855ef6ac9a4a58f6cab","slug":"CANARY-bypass1-格式化字符串漏洞","date":"2022-11-05T07:18:49.000Z","updated":"2022-11-05T08:49:59.213Z","comments":true,"path":"api/articles/CANARY-bypass1-格式化字符串漏洞.json","keywords":"DevOps, Web, Pwn, Electronics","cover":[],"text":"CANARY (bypass1): 格式化字符串漏洞CANARY 保护机制简介及格式化字符漏洞利用方法 ​ ——by DuskyJuniXor CANARY 是什么 Canary 的意思是金丝雀，来源于英国矿井工人用来探查井下气体是否有毒的金丝雀笼子。工人们每次下井都会带上一只金...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"pwn","slug":"pwn","count":3,"path":"api/tags/pwn.json"}],"author":{"name":"DuskyJuniXor","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一边学习一边随手mark的萌新","socials":{"github":"https://github.com/DuskyJuniXor","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/330711030?spm_id_from=333.1007.0.0"}}}},"feature":true},"next_post":{}}